#!/usr/bin/perl

use 5.010;

use strict;
use warnings;
no warnings 'syntax';

#
# Let p(n) represent the number of different ways in which n coins can be
# separated into piles. For example, five coins can separated into piles
# in exactly seven different ways, so p(5)=7.
#
#   ooooo
#   oooo o
#   ooo oo
#   ooo o o
#   oo oo o
#   oo o o o o
#   o o o o o
#
# Find the least value of n for which p(n) is divisible by one million.
#

#
# Needs better optimization.
#

use Math;
use Math::BigInt;

$| = 1;
for (my $n = 1; ; $n ++) {
#   printf "\r%8d " => $n;
    my $p = part_num (Math::BigInt -> new ($n));
    say "$n: $p";
    if ($p % 1_000_000 == 0) {
        say "";
        say $n;
        exit;
    }
}
